{"version":3,"sources":["components/activqiz/answersList/answerItem/answerItem.js","components/activqiz/answersList/answersList.js","components/activqiz/activqiz.js","components/menu/testList/testList.js","components/menu/menu.js","components/finishQuiz/finishQuiz.js","App.js","serviceWorker.js","index.js"],"names":["AnswerItem","props","stateAnswer","styleAnswerClick","push","className","join","onClick","onClikHeandler","answer","id","text","AnswerList","answers","map","index","key","ActivQuiz","question","numberQuestion","questionsLength","TestList","Menu","styleMenu","menuTogle","Fragment","onClickMenuHendler","FinishQuiz","countAnswer","Object","values","finishResult","val","console","log","percentResult","Math","round","App","state","counterQuestion","finishQuiz","finishRezult","questions","questionId","correctAnswerId","menuOnOf","setState","answerID","keys","succesAnswer","activQuestion","setTimeout","length","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a93c5d03.chunk.js","sourcesContent":["import React from 'react';\r\nimport './answerItem.css';\r\n\r\n\r\nconst AnswerItem = (props) => {\r\n    \r\n    const stateAnswer = ['answersList__answerItem']\r\n    const styleAnswerSucces = 'answersList__answerItem_success'\r\n    const styleAnswerError = 'answersList__answerItem_error'\r\n\r\n    if(props.styleAnswerClick === 'success') {\r\n        stateAnswer.push( styleAnswerSucces )\r\n    }\r\n    if(props.styleAnswerClick === 'error'){\r\n        stateAnswer.push( styleAnswerError )\r\n    }\r\n\r\n    return(\r\n    <li className={stateAnswer.join(' ')}\r\n        onClick = { () => props.onClikHeandler(props.answer.id) }\r\n    >\r\n        {props.answer.text}\r\n    </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem;","import React from 'react';\r\nimport './answersList.css';\r\nimport AnswerItem from './answerItem/answerItem';\r\n\r\nconst AnswerList = (props) => {\r\n\r\n    return(\r\n        <ul className='activQiz__answersList'>\r\n            \r\n            { props.answers.map((answer, index) => {                \r\n                return(\r\n                    <AnswerItem \r\n                        key = {index + 'answer'}\r\n                        answer ={answer}\r\n                        onClikHeandler = {props.onClikHeandler}\r\n                        styleAnswerClick = {props.styleAnswerClick ? props.styleAnswerClick[answer.id] : null } \r\n                    />\r\n                )   \r\n            }) }\r\n        </ul>\r\n    )   \r\n}\r\n\r\nexport default AnswerList;\r\n","import React from 'react';\r\nimport './activqiz.css';\r\nimport AnswerList from './answersList/answersList';\r\n\r\nconst ActivQuiz = (props) => {\r\n\r\n    return(\r\n        <div className = 'app__activqiz'>\r\n            <div className = 'activqiz__head' >\r\n                <h2>{props.question}</h2>\r\n                <span>{props.numberQuestion} из {props.questionsLength}</span>\r\n            </div>\r\n            <AnswerList \r\n                answers={props.answers}\r\n                onClikHeandler = {props.onClikHeandler}\r\n                styleAnswerClick = {props.styleAnswerClick}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default ActivQuiz;","import React from 'react';\r\nimport './testList.css';\r\n\r\nconst TestList = () => {\r\n    return(\r\n        <ul className='menu__testlist'>\r\n            <li className='testlist__li'>Тест \"Разное\"</li>\r\n            <li className='testlist__li'>Сказки А.С.Пушкина</li>\r\n            <li className='testlist__li'>Живоный мир</li>\r\n            <li className='testlist__li'>Тест</li>\r\n        </ul>\r\n    )\r\n} \r\n\r\nexport default TestList;","import React from 'react';\r\nimport TestList from './testList/testList';\r\nimport './menu.css';\r\n\r\nconst Menu = (props) => {\r\n\r\n    const styleMenu =['menu']\r\n    \r\n    const styleMenuOff = \"menu_off\"\r\n    const styleMenuOn =\"menu_on\"\r\n    \r\n\r\n    props.menuTogle ? styleMenu.push(styleMenuOn) : styleMenu.push(styleMenuOff)\r\n    \r\n\r\n    return(\r\n        \r\n        <React.Fragment>\r\n        <div className={styleMenu.join(' ')}>\r\n            <div className='menu__ico'\r\n                onClick={ () => {\r\n                    props.onClickMenuHendler(props.menuTogle)   \r\n                } }\r\n            />\r\n            <h2>Выбери Тест</h2>\r\n            \r\n            <TestList />\r\n\r\n        </div>\r\n        { props.menuTogle ? <div className='backgraund'></div> : null }\r\n\r\n        </React.Fragment>\r\n    )\r\n    \r\n}\r\n\r\nexport default Menu;","import React from 'react'\r\nimport './finishQuiz.css'\r\n\r\nconst FinishQuiz = (props) => {\r\n\r\n    let countAnswer = 0;\r\n    Object.values(props.finishResult).map((val) => {\r\n        if( val === 'success' ) {\r\n            countAnswer = countAnswer + 1\r\n        } \r\n    })\r\n\r\n    console.log(countAnswer)\r\n    const percentResult = Math.round(countAnswer / props.questionsLength * 100);\r\n\r\n    return(\r\n        <div className='app__finishQuiz'>     \r\n            <h2>\r\n                Тест завершен\r\n            </h2>\r\n                    \r\n            <p>Вы ответили правильно на {countAnswer} из {props.questionsLength } вопросов</p>\r\n            <p>Ваш результат: {percentResult}%</p>\r\n            <div>\r\n                <button className='finishQuiz__button'>Пройти снова</button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default FinishQuiz;","import React, { Component } from 'react';\nimport './App.css';\nimport ActivQuiz from './components/activqiz/activqiz';\nimport Menu from './components/menu/menu';\nimport FinishQuiz from './components/finishQuiz/finishQuiz'\n\n\nclass App extends Component {\n\n  state = {\n    counterQuestion: 0,\n    finishQuiz: false,\n    finishRezult: {},\n    styleAnswerClick: null,\n    menuTogle: false,\n    questions: [\n      {\n        questionId: 1,\n        question: 'Какого цвета небо',\n        correctAnswerId: 2,\n        answers: [\n          {text: 'Зеленое', id: 1},\n          {text: 'Голубое', id: 2}, \n          {text: 'Красное', id: 3},\n          {text: 'Желтое', id: 4},\n          \n        ]\n      },\n      {\n        questionId: 2,\n        question: 'Сколько ног у коровы?',\n        correctAnswerId: 4,\n        answers: [\n          {text: 'Две', id: 1},\n          {text: 'Шесть', id: 2}, \n          {text: 'Три', id: 3},\n          {text: 'Четыре', id: 4},\n          \n        ]\n      },\n      {\n        questionId: 3,\n        question: 'Кто был другом Крокодила Гены?',\n        correctAnswerId: 3,\n        answers: [\n          {text: 'Старуха Шапокляк', id: 1},\n          {text: 'Кот Мотроскин', id: 2}, \n          {text: 'Чебурашка', id: 3},\n          {text: 'Дядя Фёдор', id: 4},\n          \n        ]\n      }  \n    ]\n  }\n\n  onClickMenuHendler = (menuOnOf) => {    \n      this.setState({menuTogle: !menuOnOf })\n  }\n\n  \n  \n\n  onClikHeandler = (answerID) => {\n    if (this.state.styleAnswerClick) {\n      const key = Object.keys(this.state.styleAnswerClick)[0] \n      if (this.state.styleAnswerClick[key]  === 'success') {\n        return\n      } \n    } \n    \n    const succesAnswer = this.state.questions[this.state.counterQuestion].correctAnswerId\n    const activQuestion = this.state.questions[this.state.counterQuestion].questionId\n    const finishResult = this.state.finishRezult\n\n    if( succesAnswer === answerID) {\n      if( !finishResult[activQuestion] ) {\n        finishResult[activQuestion] = 'success'\n      }\n      this.setState({ \n        styleAnswerClick: { [answerID]:'success'},\n        finishResult: finishResult\n      });\n      \n      setTimeout(() => {\n        if(this.state.questions.length === this.state.counterQuestion + 1 ) {\n          this.setState({ finishQuiz: true})\n        }\n        else {\n          this.setState({ counterQuestion: this.state.counterQuestion + 1})\n          this.setState({ styleAnswerClick: null })\n        }\n        \n      }, 1000);\n      \n    }\n      \n    else { \n      finishResult[activQuestion] = 'error'\n      this.setState({ \n        styleAnswerClick: { [answerID]:'error'},\n        finishResult: finishResult \n      }) \n    }\n  \n  }  \n  \n  render() {  \n\n    console.log(this.state.menuTogle)\n    console.log(this.state.finishRezult)\n\n    return(\n      \n      <div className='app__body'>\n           \n          <h1>Тест: Разное</h1>\n          { this.state.finishQuiz === true \n          ? <FinishQuiz \n              finishResult = {this.state.finishResult}\n              questionsLength = {this.state.questions.length }\n            />\n          : <ActivQuiz             \n              numberQuestion = { this.state.counterQuestion + 1 }\n              questionsLength = {this.state.questions.length }\n              question = {this.state.questions[this.state.counterQuestion].question}\n              answers = {this.state.questions[this.state.counterQuestion].answers}\n              onClikHeandler = {this.onClikHeandler}\n              styleAnswerClick = {this.state.styleAnswerClick} \n            />\n          } \n        <Menu\n           \n          menuTogle={this.state.menuTogle}\n          onClickMenuHendler= {this.onClickMenuHendler} \n        />\n      </div>\n      \n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}